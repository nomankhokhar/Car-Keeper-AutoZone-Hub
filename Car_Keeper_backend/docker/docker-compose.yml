services:
  postgres:
    image: postgres:15-alpine
    container_name: car_keeper_db
    environment:
      POSTGRES_USER: caruser
      POSTGRES_PASSWORD: carpassword
      POSTGRES_DB: car
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caruser -d car"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: car_keeper_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: caruser
      DB_PASSWORD: carpassword
      DB_NAME: car
      JWT_SECRET: BetterCallSoul
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy  # âœ… Wait until Postgres healthcheck passes
    restart: on-failure  # Optional: ensures app restarts if it still fails initially

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"   # Jaeger Agent UDP (optional if not using)
      - "4318:4318"       # OTLP/HTTP
      - "14268:14268"     # Jaeger Collector HTTP
      - "16686:16686"     # Jaeger UI

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./../prometheous/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana


volumes:
  postgres_data:
  grafana_data:
